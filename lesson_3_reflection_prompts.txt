When would you want to use a remote repository rather than keeping all your work
local?

    It's most convenient when you're cooperating with other people on a larger project. 
    I believe it's also okay to use it on text files like mentioned "choose-your-own-adventure".
    However, when working alone on some multi-file project maybe writing code in one's favorite IDE
    and then commiting locally is more convenient.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    First reason I can think of is to not to pull branches started on remote that are buggy or undesirable in any other fashion.
    Secondly, there might have been some merging done locally that prevents you from pulling a branch from remote
    which doesn't exist locally anymore.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Fork: when I want to contribute to/use someone else's work.
    Clone: when I want to add someone's work to enhance my code
    Branch: when I'm trying out a new feature or expanding

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Being able to predict if there's a merge conflict? Or maybe to avoid the loss of unconnected branches?

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    It definitely would be harder without exploring different branches, pushing and pulling to/from remote. 
	And pull requests act as a possibility for another collaborator to review specific changes.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
